apply plugin: 'com.android.application'
apply plugin: 'org.sonarqube'
apply plugin: "jacoco"
apply from: 'jacoco.gradle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "me.alexnitu"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    def rxJavaVersion = '2.1.3'
    def rxAndroidVersion = '2.0.1'
    def butterKnifeVersion = '10.0.0'
    def daggerVersion = '2.21'
    def espressoVersion = '3.1.2-alpha01'
    def retrofitVersion = '2.5.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.google.android.material:material:1.1.0-alpha03"
    implementation "androidx.recyclerview:recyclerview:1.1.0-alpha02"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    // Espresso UI Testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.15.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.0"
}

sonarqube {
    properties {
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-28/android.jar"

        property "sonar.sources", "src/main/java/"
        property "sonar.binaries", "build/intermediates/javac/debug/"
        property "sonar.libraries", libraries
        property "sonar.tests", "src/test/, src/androidTest/"
        property "sonar.java.test.binaries", "build/intermediates/javac/debug"
        property "sonar.java.test.libraries", libraries

        property "sonar.jacoco.reportPath", "/build/reports/jacoco/jacocoTest.exec"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "/build/test-results/testDebugUnitTest/"
        property "sonar.android.lint.report", "/build/reports/lint-results.xml"
    }
}